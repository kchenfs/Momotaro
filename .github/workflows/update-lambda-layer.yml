name: Update Lambda Layer

on:
  push:
    branches:
      - main  # Adjust the branch as needed

jobs:
  update_lambda_layer:
    runs-on: ubuntu-latest
    
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 1: Build and Run generate-layer image
      - name: Build Lambda_Layer image
        run: |
          cd generate-layer/scripts/
          chmod +x runner.sh  # Ensure the script is executable
          ./runner.sh 
      # Step 2 You may need to log in to a Docker registry here
      - name: Upload the layer package to S3
        run: |
          cd generate-layer/scripts/
          pwd
          ls -l
          aws s3 cp python.zip s3://momotaropackage/
      #Step 3: Upload the lambda_function.py file to S3 bucket
      - name: Uploading lambda function to S3
        run: |
          pwd
          ls -l
          echo "Zipping artififacts and pushing to S3..."
          mkdir lambda_artifacts
          zip lambda_artifacts/lambda_artifact.zip lambda_function.py
          aws s3 sync ./lambda_artifacts s3://momotaropackage/
       
      #step 4: Update the layer packages and lambda function
      - name: updating lambda and layers from s3
        run: |
          pwd
          ls -l
          echo "Updating lambda function..."
          aws lambda update-function-code --function-name "MomotaroCode" --s3-bucket "momotaropackage" --s3-key "lambda_artifact.zip"
          echo "Lambda function successfully updated"
                
      # Step 5: Initialize Terraform
      - name: Initialize Terraform
        run: |
          terraform fmt
          terraform init -upgrade
          terraform apply -auto-approve
  
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION:  ${{ secrets.AWS_REGION }}

  